<!DOCTYPE html>
<html>
<head>
  <title>CurrencyTracker</title>
  <%= stylesheet_link_tag :all %>
  <%= javascript_include_tag 'extensions', 'jquery-1.5.2.min', 'view_controller', 'simple_pie_chart' %>
  <script src='http://www.google.com/jsapi'></script>
  <%= csrf_meta_tag %>

<script type="text/javascript">
  $(document).ready(function(){
    $('#create_country_form')
    .bind("ajax:beforeSend", function(evt, xhr, settings){
      var $submitButton = $(this).find('input[name="commit"]');
      // Update the text of the submit button to let the user know stuff is happening.
      // But first, store the original text of the submit button, so it can be restored when the request is finished.
      $submitButton.data( 'origText', $(this).text() );
      $submitButton.text( "Submitting..." );
    }(this).find('input[name="commit"]');
      // Restore the original submit button text
      $submitButton.text( $(this).data('origText') );
    })
    .bind("ajax:success", function(evt, data, status, xhr){
      var $form = $(this);
      // Reset fields and any validation errors, so form can be used again, but leave hidden_field values intact.
      $form.find('textfield,input[type="text"],input[type="file"]').val("");
      $form.find('div.validation-error').empty();
      // Insert response partial into page below the form.
      $('#countries').append(xhr.responseText);
    })
    .bind('ajax:complete', function(evt, xhr, status){
      var $submitButton = $(this).find('input[name="commit"]');
      // Restore the original submit button text
      $submitButton.text( $(this).data('origText') );
    })
    .bind("ajax:error", function(evt, xhr, status, error){
      var $form = $(this), errors, errorText;
      try {
        // Populate errorText with the comment errors
        errors = $.parseJSON(xhr.responseText);
      } catch(err) {
        // If the responseText is not valid JSON (like if a 500 exception was thrown), populate errors with a generic error message.
        errors = {message: "Please reload the page and try again"};
      }
      // Build an unordered list from the list of errors
      errorText = "There were errors with the submission: \n<ul>";
      for ( error in errors ) {
        errorText += "<li>" + error + ': ' + errors[error] + "</li> ";
      }
      errorText += "</ul>";
      // Insert error list into form
      $form.find('div.validation-error').html(errorText);
    });
  });
</script>

</head>
<body>

<header>
  <h1>CurrencyTracker</h1>
  <nav>
    <ul>
      <li><%= link_to "Currencies", currencies_path %></li>
      <li><%= link_to "Countries", countries_path %></li>
      <% if current_user %>
        <li><%= link_to "Edit Profile", edit_user_path(current_user.id) %></li>
        <li><%= link_to "Logout", :logout %>
      <% else %>
        <li><%= link_to "Register", new_user_path %></li>
        <li><%= link_to "Login", :login %></li>
      <% end %>
    </ul>
  </nav>
</header>
<p id="notice"><%= notice %></p>
<%= yield %>

<footer>
  CurrencyTracker &copy; Copyright 2011 by Smart Enterprises.
</footer>
</body>
</html>
